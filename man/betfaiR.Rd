% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/betfair_methods.R
\name{betfair}
\alias{betfair}
\title{betfair - Betfair Environment w/ methods}
\usage{
betfair(usr, pwd, key, jurisdiction = "default")
}
\arguments{
\item{usr}{Betfair username}

\item{pwd}{Betfair password}

\item{key}{Betfair API key see \href{https://api.developer.betfair.com/services/webapps/docs/display/1smk3cen4v3lu3yomq5qye0ni/Application+Keys}{developer.betfair.com}}

\item{jurisdiction}{login to different jurisdictions, enter "italy" for Italian
exchange, "spain" for Spanish, and "romania" for Romanian}
}
\value{
returns environment with functions for the various methods available for
Betfair's API
}
\description{
Supply valid credentials, username, password and API key (see \href{https://api.developer.betfair.com/services/webapps/docs/display/1smk3cen4v3lu3yomq5qye0ni/Application+Keys}{developer.betfair.com}),
returning a environment with methods (see Methods section below) for returning data from
Betfair's API.
}
\details{
filters can be used in a number of available methods, these filters are
to be supplied as a list, the \link{marketFilter} function provides assistance in
building the list.
}
\section{Methods}{

\describe{
     \item{\code{account(pwd)}}{ Return environment with methods for accessing data
     about your account}
     \item{\code{competitions(filter = marketFilter())}}{ Retrieve data about the
     different competitions with current markets, see \link{competitions}, see
     \link{marketFilter} for filtering data.}
     \item{\code{countries(filter = marketFilter())}}{ Retrieve data about the different countries
     hosting events, see \link{countries}, see \link{competitions}, see
     \link{marketFilter} for filtering data.}
     \item{\code{events(filter = marketFilter())}}{ Retrieve data about the different events, see
     \link{events}, see \link{competitions}, see
     \link{marketFilter} for filtering data.}
     \item{\code{eventTypes(filter = marketFilter())}}{ Retrieve data about the different event types,
     ie. sports, see \link{eventTypes}, see \link{competitions}, see
     \link{marketFilter} for filtering data.}
     \item{\code{venues(filter = marketFilter())}}{ Retrieve data about the venues hosting racing,
     see \link{venues}, see \link{competitions}, see
     \link{marketFilter} for filtering data.}
     \item{\code{login(usr, pwd, key, jurisdiction)}}{ Login in, a session token will be
     returned, over-writing the previous token when \code{betfair(usr, pwd, key, jurisdiction)}
     was used.}
     \item{\code{session()}}{ Print details about the session, including login
     in details and session token.}
     \item{\code{marketBook(marketIds = list(), priceProjection = "EX_BEST_OFFERS",
     orderProjection = "EXECUTABLE", matchProjection = "NO_ROLLUP", getRunners = NULL)}}{ Retrieve dynamic
     data about markets, data includes, prices, status of the market, status of
     selections, the traded volume, and the status of any orders in the market,
     see \link{marketBook}}
     \item{\code{marketCatalogue(filter = marketFilter(), marketProjection = "EVENT",
     sort = NULL, maxResults = 1, keepRules = FALSE)}}{ Retrieve data about the
     different types of markets, see \link{marketCatalogue}, see \link{competitions}, see
     \link{marketFilter} for filtering data.}
     \item{\code{marketPnL(marketIds, settled = NULL, bsp = NULL, NET = NULL)}}{ Retrieve
     data about the current profit/loss for markets you may have existing orders in'}
     \item{\code{marketTypes(filter = marketFilter())}}{ Retrieve data about the different types of
     markets, see \link{marketTypes}, see \link{competitions}, see
     \link{marketFilter} for filtering data.}
     \item{\code{cancelOrders(..., marketId = NA)}}{ Cancel existing orders, leave function blank
     to cancel all existing orders, see \link{cancelOrders}.  You can use a combination of marketId
     and ... to target specific orders, see \link{cancel_inst} to target specific order}
     \item{\code{clearedOrders(betStatus = "SETTLED", eventTypeIds = NULL, eventIds = NULL,
     marketIds = NULL, runnerIds = NULL, betIds = NULL, side = "BACK", from = NULL, to = NULL)}}{
     Retrieve data about cleared orders, which are orders that have been settled, see
     \link{clearedOrders}, use the various params to help filter bets}
     \item{\code{currentOrders(betId = NULL, marketId = NULL, orderProjection = "ALL",
     from = NULL, to = NULL, orderBy = "BY_BET", sort = "EARLIEST_TO_LATEST", fromRecord = NULL,
     count = NULL)}}{ Retrieve existing unsettled orders, leave function blank to retreive
     all orders, see \link{currentOrders}, use the various params too help filter
     bets}
     \item{\code{placeOrders(marketId, selectionId, orderType = "LIMIT", handicap = NULL,
     side = "BACK", order = limitOrder())}}{ Place an order, see \link{placeOrders}, requires a marketId and selectionId (see
     \link{marketCatalogue} and \link{marketBook} for details on these params), make use of
     various helper functions (\link{limitOrder} or \link{limitOnCloseOrder}) depending
     on the type of order}
     \item{\code{replaceOrders(..., marketId)}}{ Replace existing orders, requires marketIds and
     unique betIds with new prices, use \link{replace_inst} to target specific bets}
     \item{\code{updateOrders(..., marketId)}}{ Update existing orders with new
     instructions for what to do when the market goes in play, use \link{update_inst} to target
     specific bets}
}
}

\examples{
\dontrun{
bf <- betfair(usr = "username", pwd = "password", key = "API_key")

# to view available methods simply print the bf
bf

# to use a method, for example competitions
bf$competitions(filter = list())

# to use a method with a filter to retrieve just football
bf$competitions(filter = marketFilter(eventTypeIds = 1))
}
}
